<link rel="stylesheet" href="/css/style.css">

<h1>{{title}}</h1>

<div id="error-message" class="error-message" style="display: none;"></div>

<div class="cart-container">
    {{#if cart.products.length}}
        {{#each cart.products}}
            <div class="cart-item">
                <h3>{{this.product.title}}</h3>
                <p>Code: {{this.product.code}}</p>
                <p class="price">Price: ${{this.product.price}}</p>
                <p class="quantity">Quantity: {{this.quantity}} ({{this.product.stock}} available)</p>
                <p class="subtotal">Subtotal: ${{multiply this.product.price this.quantity}}</p>
                <button onclick="removeFromCart('{{this.product._id}}')" class="remove-btn">Remove</button>
                <div class="quantity-controls">
                    <button onclick="updateQuantity('{{this.product._id}}', {{this.quantity}} - 1)">-</button>
                    <span>{{this.quantity}}</span>
                    <button onclick="updateQuantity('{{this.product._id}}', {{this.quantity}} + 1)" {{#if (equals this.quantity this.product.stock)}}disabled{{/if}}>+</button>
                </div>
            </div>
        {{/each}}
        <div class="cart-total">
            <h3>Total: ${{cartTotal cart.products}}</h3>
        </div>
    {{else}}
        <p>Your cart is empty</p>
    {{/if}}
</div>

<script>
function showError(message) {
    const errorDiv = document.getElementById('error-message');
    errorDiv.textContent = message;
    errorDiv.style.display = 'block';
    setTimeout(() => {
        errorDiv.style.display = 'none';
    }, 3000);
}

function removeFromCart(productId) {
    fetch(`/api/carts/remove/${productId}`, {
        method: 'DELETE'
    }).then(() => window.location.reload())
    .catch(error => showError('Error removing item from cart'));
}

function updateQuantity(productId, newQuantity) {
    if (newQuantity < 1) return;
    
    fetch(`/api/carts/update/${productId}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ quantity: newQuantity })
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error);
            });
        }
        window.location.reload();
    })
    .catch(error => showError(error.message));
}
</script> 